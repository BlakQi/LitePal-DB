name: Build and Release JAR

on:
  push:
    branches:
      - master
    tags:
      - '*'  # 当任何 tag 被推送时触发

jobs:
  build:
    name: Build JAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # 更新到最新版本

      - name: Set up JDK 11
        uses: actions/setup-java@v3  # 更新到最新版本
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build JAR
        run: ./gradlew :core:build

      - name: List files in build directory
        run: ls -R core/build/libs  # 列出构件目录以确认文件存在

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3  # 更新到 v3
        with:
          name: jar  # 确保这个名称
          path: core/build/libs/gzandea-db.jar  # 确保路径正确

  release:
    name: Create Release and Upload JAR
    needs: build  # 确保 release 在 build job 之后运行
    if: startsWith(github.ref, 'refs/tags/')  # 只有推送 tag 时才执行
    runs-on: ubuntu-latest

    steps:
      - name: Download JAR from build
        uses: actions/download-artifact@v3  # 更新到 v3
        with:
          name: jar  # 确保这个名称与上传时一致

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1  # 保持不变
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}  # 使用推送的 tag 作为 release 的 tag 名
          release_name: Release ${{ github.ref_name }}  # Release 名字

      - name: Upload Release JAR
        uses: actions/upload-release-asset@v1  # 保持不变
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gzandea-db.jar  # 确保下载的路径正确
          asset_name: gzandea-db-${{ github.ref_name }}.jar  # 根据 tag 生成文件名
          asset_content_type: application/java-archive
