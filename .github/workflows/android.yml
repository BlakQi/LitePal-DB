name: Android CI

on:
  push:
    tags:  # 仅在推送 tag 时触发
      - 'v*'  # 例如 v1.0, v2.0 等

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and create JAR in core module
        run: ./gradlew :core:aamakeJar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4  # 使用最新的 v4 版本
        with:
          name: gzandea-db-jar
          path: core/build/libs/gzandea-db.jar


  upload-release-asset:
    name: Upload JAR to Existing Release
    runs-on: ubuntu-latest
    needs: build  # 确保 build 完成后执行

    steps:
      - name: Download JAR from build
        uses: actions/download-artifact@v4  # 使用最新的 v4 版本
        with:
          name: gzandea-db-jar

      - name: Get release ID
        id: get_release
        run: |
          TAG_NAME="${{ github.ref }}"
          API_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/${TAG_NAME#refs/tags/}"
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$API_URL")
          echo "Response: $RESPONSE"
          RELEASE_ID=$(echo $RESPONSE | jq -r '.id')
          UPLOAD_URL=$(echo $RESPONSE | jq -r '.upload_url' | sed 's/{?name,label}//')
          echo "release_id=${RELEASE_ID}" >> $GITHUB_ENV
          echo "upload_url=${UPLOAD_URL}" >> $GITHUB_ENV

      - name: Upload Release Asset
        if: env.release_id != 'null'
        run: |
          echo "Uploading to Release..."
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/java-archive" \
          --data-binary @core/build/libs/gzandea-db.jar \
          "${{ env.upload_url }}?name=gzandea-db-${{ github.ref }}.jar"
