name: Android CI

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'  # 触发条件，包括所有标签
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and create JAR in core module
        run: ./gradlew :core:aamakeJar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: gzandea-db-jar
          path: core/build/libs/gzandea-db.jar

  release:
    name: Create Release and Upload JAR
    runs-on: ubuntu-latest
    needs: build  # 确保在 build 完成后执行
    if: startsWith(github.ref, 'refs/tags/')  # 只有在推送 tag 时才执行

    steps:
      - name: Download JAR from build
        uses: actions/download-artifact@v3
        with:
          name: gzandea-db-jar  # 确保这个名称与上传时一致

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1  # 你可以选择合适的版本
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}  # 使用推送的 tag 作为 release 的 tag 名
          release_name: Release ${{ github.ref_name }}  # Release 名字

      - name: Upload Release JAR
        uses: actions/upload-release-asset@v1  # 你可以选择合适的版本
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gzandea-db.jar  # 确保下载的路径正确
          asset_name: gzandea-db-${{ github.ref_name }}.jar  # 根据 tag 生成文件名
          asset_content_type: application/java-archive
